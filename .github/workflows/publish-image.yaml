---
name: Publish Radarr

on:
  repository_dispatch:
  push:
    paths:
      - "Dockerfile"
      - ".github/workflows/*"
  workflow_dispatch:
    inputs:
      SHELL_XTRACE_ENABLED:
        type: boolean
        default: false
        description: "Shell debugging"
  schedule:
    - cron: "0 4 * * *"

jobs:
  lint_repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        continue-on-error: true

  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and publish
        id: vars
        run: |
          set -e
          [[ "${{ inputs.SHELL_XTRACE_ENABLED }}" = "true" ]] && set -o xtrace

          IMAGE_NAME=failfr8er/radarr
          RADARR_RAW=$(curl -H "Accept: application/vnd.github.v3+json" -s https://api.github.com/repos/radarr/radarr/releases/latest)
          RADARR_ASSET=$(echo "${RADARR_RAW}" | jq -r '.assets[] | select(.name | endswith(".linux-musl-core-x64.tar.gz")).browser_download_url')
          ALPINE_VERSION="latest"

          echo ::set-output name=RADARR_VERSION::${RADARR_VERSION}

          wget "${RADARR_ASSET}"
          # Set Radarr version
          RADARR_VERSION=$(jq -r '.tag_name' <<< "${RADARR_RAW}")
          RADARR_VERSION_MAJOR="${RADARR_VERSION%%.*}"
          RADARR_VERSION_MINOR="${RADARR_VERSION%.*.*}"

          # Set option to push built image
          DOCKER_PUSH=""
          [[ "${GITHUB_REF_NAME}" = "master" ]] && DOCKER_PUSH="--push"

          [[ -n ${DOCKER_PUSH} ]] && echo "Built image will be pushed to Docker Hub"

          docker buildx build \
            --file Dockerfile \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            --tag ${IMAGE_NAME}:latest \
            --tag ${IMAGE_NAME}:${RADARR_VERSION} \
            --push \
            --build-arg ALPINE_VERSION=${ALPINE_VERSION} \
            --build-arg RADARR_VERSION="${RADARR_VERSION:1}" \
            --platform=linux/amd64 \
            --tag "${IMAGE_NAME}:${RADARR_VERSION_MAJOR}" \
            --tag "${IMAGE_NAME}:${RADARR_VERSION_MINOR}" \
            ${DOCKER_PUSH} \
            .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/failfr8er/radarr:${{ steps.vars.outputs.RADARR_VERSION }}"
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
